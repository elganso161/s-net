{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","style","friendsListItem","id","activeClassName","active","dialogBlock","src","img","alt","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","addMessageBlock","Field","validate","required","component","Textarea","placeholder","Dialogs","dialogsPage","dialogsElement","dialogsData","map","elem","messagesElement","messagesData","dialogs","values","addMessage","newMessageBody","compose","dispatch","addMessageActionCreator"],"mappings":"qOAIIA,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAA0B,IAAtBC,KAAKC,MAAMN,OAAyB,cAAC,IAAD,CAAUO,GAAI,WAC/C,cAACJ,EAAD,eAAeE,KAAKC,YAJc,GACbE,IAAML,WAUtC,OAHqCM,YAAQX,EAARW,CACnCL,K,oBClBJM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAkB,mC,oBCAvED,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,OAAS,2BAA2B,YAAc,kC,8GCkB3GC,EAfI,SAACN,GAChB,OACI,oBAAIO,UAAWC,IAAMC,gBAArB,SACI,cAAC,IAAD,CAASR,GAAI,YAAcD,EAAMU,GAAIC,gBAAiBH,IAAMI,OAA5D,SACI,sBAAKL,UAAWC,IAAMK,YAAtB,UACI,8BACI,qBAAKC,IAAKd,EAAMe,IAAKC,IAAI,UAE7B,8BAAMhB,EAAMiB,eCDjBC,EARC,SAAClB,GACf,OACE,oBAAIO,UAAU,mBAAd,SACE,4BAAIP,EAAMmB,a,yCCqCZC,EAAeC,YAAiB,KAoB9BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACvB,GACtB,OACE,mCACE,sBAAMyB,SAAUzB,EAAM0B,aAAtB,SACE,sBAAKnB,UAAWC,IAAMmB,gBAAtB,UACE,cAACC,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUV,GACrBW,UAAWC,IACXf,KAAM,iBACNgB,YAAa,uBAEf,0DAWKC,EAzDC,SAAClC,GACf,IAAIP,EAAQO,EAAMmC,YAEdC,EAAiB3C,EAAM4C,YAAYC,KAAI,SAACC,GAAD,OACzC,cAAC,EAAD,CAA0BtB,KAAMsB,EAAKtB,KAAMP,GAAI6B,EAAK7B,GAAIK,IAAKwB,EAAKxB,KAAjDwB,EAAK7B,OAGpB8B,EAAkB/C,EAAMgD,aAAaH,KAAI,SAACC,GAAD,OAC3C,cAAC,EAAD,CAAuBpB,QAASoB,EAAKpB,SAAvBoB,EAAK7B,OAOrB,OAAqB,IAAjBV,EAAMN,OAAyB,cAAC,IAAD,CAAUO,GAAI,WAG/C,mCACE,sBAAKM,UAAWC,IAAMkC,QAAtB,UACE,8BACE,6BAAKN,MAEP,qBAAK7B,UAAU,WAAf,SACE,oBAAIA,UAAU,eAAd,SAA8BiC,MAEhC,wBACA,cAAClB,EAAD,CAAqBG,SAhBP,SAACkB,GACnB3C,EAAM4C,WAAWD,EAAOE,yB,0BCDbC,sBACb3C,aAfoB,SAACV,GACrB,MAAO,CACL0C,YAAa1C,EAAM0C,gBAIE,SAACY,GACxB,MAAO,CACLH,WAAY,SAACC,GACXE,EAASC,YAAwBH,SAOrCjD,IAFakD,CAGbZ","file":"static/js/4.a1bdb10d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (this.props.isAuth === false) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Q9Nu\",\"addMessageBlock\":\"Dialogs_addMessageBlock__5CYMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsListItem\":\"DialogItem_friendsListItem__XyzVJ\",\"active\":\"DialogItem_active__1_mKI\",\"dialogBlock\":\"DialogItem_dialogBlock__1mmmb\"};","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <li className={style.friendsListItem}>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={style.active}>\r\n                <div className={style.dialogBlock}>\r\n                    <div>\r\n                        <img src={props.img} alt=\"img\" />\r\n                    </div>\r\n                    <div>{props.name}</div>\r\n                </div>\r\n            </NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react'\r\n// import style from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <li className=\"messagesListItem\">\r\n      <p>{props.message}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElement = state.dialogsData.map((elem) => (\r\n    <DialogItem key={elem.id} name={elem.name} id={elem.id} img={elem.img} />\r\n  ));\r\n\r\n  let messagesElement = state.messagesData.map((elem) => (\r\n    <Message key={elem.id} message={elem.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (props.isAuth === false) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <>\r\n      <div className={style.dialogs}>\r\n        <div>\r\n          <ul>{dialogsElement}</ul>\r\n        </div>\r\n        <div className=\"messages\">\r\n          <ul className=\"messagesList\">{messagesElement}</ul>\r\n        </div>\r\n        <div></div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div className={style.addMessageBlock}>\r\n          <Field\r\n            validate={[required, maxLength100]}\r\n            component={Textarea}\r\n            name={\"newMessageBody\"}\r\n            placeholder={\"Enter your message\"}\r\n          />\r\n          <button>addMessage</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","// import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { addMessageActionCreator } from \"../../Redux/dialogs-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}